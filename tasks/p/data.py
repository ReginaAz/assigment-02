from typing import Any


# STRINGS

def censor(s: str, blacklist: list[str]):
    """
    Функция принимает строку и список запрещенных подстрок, и возвращает копию
    строки s, в которой все вхождения запрещенных слов заменены на равное их
    длине количество '*'
    """
    ...


def shorten(s: str, size: int):
    """
    Функция принимает строку s и возвращает ее укороченную до длины size версию,
    в которой от s оставлены lower-case начало и конец с '...' между ними, а
    все блоки пробельных символов заранее заменены на '-'
    """
    ...


# LISTS

def windowed_average(array: list, k: int):
    """
    Функция принимает массив array и ширину "окна" k, и возвращает массив,
    состоящий из средних арифметических значений массива array на каждом его
    подотрезке длины k
    """
    ...


def shuffle(array: list, times: int = 1):
    """
    Функция принимает массив array и количество "перетасовок", и возвращает
    копию этого массива, перетасованную times раз делением пополам и
    смешиванием двух полученных половин
    """
    ...


# SETS

def is_unrestricted(item):
    """
    Функция принимает произвольный объект и возвращает, может ли он быть
    элементом множества
    """
    ...


def update_squares(s: set[int]):
    """
    Функция принимает множество целых чисел и добавляет в него квадрат каждого
    из его изначальных элементов
    (функция модифицирует переданный объект и ничего не возвращает)
    """
    ...


# DICTIONARIES

def select(d: dict, *args):
    """
    Функция принимает словарь d и набор ключей, и возвращает копию d, в которой
    оставлены только ключи из *args, при чем если какой-то ключ из *args в d
    отсутствовал, в возвращаемом словаре по этому ключу должен лежать None
    """
    ...

